# -*- coding: utf-8 -*-
import pandas as pd
import numpy as np


def ecg_intervalrelated(data):
    """
    Performs ECG analysis on longer periods of data (typically > 10 seconds),
    such as resting-state data.

    Parameters
    ----------
    data : DataFrame, dict
        A DataFrame containing the different processed signal(s) as
        different columns, typically generated by `ecg_process()` or
        `bio_process()`. Can also take a dict containing sets of
        separately processed DataFrames.

    Returns
    -------
    DataFrame
        A dataframe containing the analyzed ECG features. The analyzed
        features consist of the following:
        - *"ECG_Rate_Mean"*: the mean heart rate.

    See Also
    --------
    bio_process, ecg_eventrelated

    Examples
    ----------
    >>> import neurokit2 as nk
    >>> import pandas as pd
    >>>
    >>> # Example with real data
    >>> data = pd.read_csv("https://raw.githubusercontent.com/neuropsychology/NeuroKit/master/data/bio_resting_5min_100hz.csv")
    >>>
    >>> # Process the data
    >>> df, info = nk.bio_process(ecg=data["ECG"], sampling_rate=100)
    >>> nk.ecg_intervalrelated(df)
    """
    intervals = {}

    # Format input
    if isinstance(data, pd.DataFrame):
        rate_cols = [col for col in data.columns if 'ECG_Rate' in col]
        if len(rate_cols) == 1:
            intervals["Rate_Mean"] = data[rate_cols[0]].values.mean()
        else:
            raise ValueError("NeuroKit error: ecg_intervalrelated(): Wrong input,"
                             "we couldn't extract heart rate. Please make sure"
                             "your DataFrame contains an `ECG_Rate` column.")
        ecg_intervals = pd.DataFrame.from_dict(intervals,
                                               orient="index").T.add_prefix("ECG_")

    elif isinstance(data, dict):
        for index in data:
            intervals[index] = {}  # Initialize empty container

            # Rate
            intervals[index] = _ecg_intervalrelated_rate(data[index],
                                                         intervals[index])
        ecg_intervals = pd.DataFrame.from_dict(intervals, orient="index")

    return ecg_intervals

# =============================================================================
# Internals
# =============================================================================


def _ecg_intervalrelated_rate(interval, output={}):

    # Sanitize input
    colnames = interval.columns.values
    if len([i for i in colnames if "ECG_Rate" in i]) == 0:
        raise ValueError("NeuroKit error: ecg_intervalrelated(): Wrong input,"
                         "we couldn't extract heart rate. Please make sure"
                         "your DataFrame contains an `ECG_Rate` column.")
        return output

    signal = interval["ECG_Rate"].values
    output["ECG_Rate_Mean"] = np.mean(signal)

    return output
